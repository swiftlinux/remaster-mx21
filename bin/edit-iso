#!/bin/bash

# NOTE: set -o pipefail is needed to ensure that any error or failure causes the whole pipeline to fail.
# Without this specification, the CI status will provide a false sense of security by showing builds
# as succeeding in spite of errors or failures.
set -eo pipefail

echo '#############################################################################'
echo 'BEGIN STAGE 8: Customizing MX Linux to create the Swift Linux special edition'
echo '#############################################################################'

echo '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
echo 'BEGIN STAGE 8A: customizing the Swift Linux ISO component files'
echo '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'

DATE1=$(date +%s)

source definitions.sh

echo '------------------------'
echo "cat $DIR_ISO_NEW/version"
cat $DIR_ISO_NEW/version
echo ''

echo '---------------------------'
echo "cat $DIR_ISO_NEW/.disk/info"
cat $DIR_ISO_NEW/.disk/info
echo ''

# Listing the files containing MX-$MX_VERSION, $MX_CODE_NAME, and $MX_DATE
bin/string-in-directory 'list' "$DIR_ISO_NEW" "MX-$MX_VERSION"
bin/string-in-directory 'list' "$DIR_ISO_NEW" "$MX_CODE_NAME"
bin/string-in-directory 'list' "$DIR_ISO_NEW" "$MX_DATE"
bin/string-in-directory 'list' "$DIR_ISO_NEW" 'MX Linux'
bin/string-in-directory 'list' "$DIR_ISO_NEW" 'MX'

STRING1="MX-$MX_VERSION"
STRING2="$EDITION_LONG $SWIFT_VERSION"

bin/string-in-directory 'replace' "$DIR_ISO_NEW" "$STRING1" "$STRING2"
bin/string-in-directory 'error-if-present' "$DIR_ISO_NEW" "$STRING1"

bin/string-in-directory 'replace' "$DIR_ISO_NEW" "$MX_CODE_NAME" "$TIME_STAMP"
bin/string-in-directory 'error-if-present' "$DIR_ISO_NEW" "$MX_CODE_NAME"

# Listing the files containing $EDITION_LONG, $SWIFT_VERSION
bin/string-in-directory 'list' "$DIR_ISO_NEW" "$EDITION_LONG"
bin/string-in-directory 'list' "$DIR_ISO_NEW" "$SWIFT_VERSION"


DATE2=$(date +%s)

echo '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
echo "FINISHED 8A: customizing the Swift Linux ISO component files ($((DATE2-DATE1)) seconds)"
echo '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
