#!/bin/bash

# NOTE: set -o pipefail is needed to ensure that any error or failure causes the whole pipeline to fail.
# Without this specification, the CI status will provide a false sense of security by showing builds
# as succeeding in spite of errors or failures.
set -eo pipefail

# PURPOSE:
# In this stage, selected ISO component files (in the $DIR_ISO_NEW directory) are customized.

echo '#############################################################################'
echo 'BEGIN STAGE 8: Customizing MX Linux to create the Swift Linux special edition'
echo '#############################################################################'

echo '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
echo 'BEGIN STAGE 8A: customizing the Swift Linux ISO component files'
echo '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'

DATE1=$(date +%s)

source definitions.sh

# Updating $DIR_ISO_NEW/version
FILE1="$DIR_ISO_NEW/version"
echo ''
echo "Updating $FILE1"
echo "$EDITION_LONG $SWIFT_VERSION ($TIME_STAMP)" > "$FILE1"
echo "Based on MX Linux $MX_VERSION (x64) $MX_CODE_NAME $MX_DATE" >> "$FILE1"
echo ''
echo '----------'
echo "cat $FILE1"
cat $FILE1
echo ''

# Checking $DIR_ISO_NEW/version
bin/check-edition-long "$FILE1"
bin/check-swift-version "$FILE1"
bin/check-time-stamp "$FILE1"

# Updating $DIR_ISO_NEW/.disk/info
FILE1="$DIR_ISO_NEW/.disk/info"
echo ''
echo "Updating $DIR_ISO_NEW/version"
echo "$EDITION_LONG $SWIFT_VERSION ($TIME_STAMP)" > "$FILE1"
echo "Based on MX Linux $MX_VERSION (x64) $MX_CODE_NAME $MX_DATE" >> "$FILE1"
echo ''
echo '----------'
echo "cat $FILE1"
cat $FILE1
echo ''

# Checking $DIR_ISO_NEW/.disk/info
bin/check-edition-long "$FILE1"
bin/check-swift-version "$FILE1"
bin/check-time-stamp "$FILE1"

# Updating $DIR_ISO_NEW/boot/grub/grub.cfg
FILE1="$DIR_ISO_NEW/boot/grub/grub.cfg"
echo ''
echo "Updating $FILE1"
bin/replace_sif 'Live version of MX' "live version of $EDITION_LONG" "$FILE1"
bin/replace-mx-date "$FILE1"
bin/replace_sif "MX-$MX_VERSION" "$EDITION_LONG $SWIFT_VERSION" "$FILE1"

# Checking $DIR_ISO_NEW/boot/grub/grub.cfg
bin/check-edition-long "$FILE1"
bin/check-swift-version "$FILE1"
bin/error-if-sif 'MX' "$FILE1"
bin/check-mx-date "$FILE1"
bin/check-time-stamp "$FILE1"

# Updating $DIR_ISO_NEW/boot/grub/theme/bios.txt
FILE1="$DIR_ISO_NEW/boot/grub/theme/bios.txt"
echo ''
echo "Updating $FILE1"
bin/replace-mx-date "$FILE1"
bin/replace_sif "MX-$MX_VERSION" "$EDITION_LONG $SWIFT_VERSION" "$FILE1"
bin/replace-mx-code-name "$FILE1"

# Checking $DIR_ISO_NEW/boot/grub/theme/bios.txt
bin/check-edition-long "$FILE1"
bin/check-swift-version "$FILE1"
bin/error-if-sif 'MX' "$FILE1"
bin/check-mx-date "$FILE1"
bin/replace-mx-code-name "$FILE1"
bin/check-time-stamp "$FILE1"

# Updating $DIR_ISO_NEW/boot/syslinux/readme.msg
FILE1="$DIR_ISO_NEW/boot/syslinux/readme.msg"
echo ''
echo "Updating $FILE1"
bin/replace-mx-date "$FILE1"
bin/replace_sif 'MX Linux' "$EDITION_LONG" "$FILE1"
bin/replace_sif "MX-$MX_VERSION" "$EDITION_LONG $SWIFT_VERSION" "$FILE1"

# Checking $DIR_ISO_NEW/boot/syslinux/readme.msg
bin/check-edition-long "$FILE1"
bin/check-swift-version "$FILE1"
bin/error-if-sif 'MX' "$FILE1"
bin/check-mx-date "$FILE1"
bin/check-time-stamp "$FILE1"

DATE2=$(date +%s)

echo '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
echo "FINISHED 8A: customizing the Swift Linux ISO component files ($((DATE2-DATE1)) seconds)"
echo '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
