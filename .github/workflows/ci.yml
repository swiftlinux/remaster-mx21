name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        EDITION_SHORT: ['hannahmontana', 'interstate', 'taylorswift', 'twilightzone']
        include:
          - EDITION_SHORT: 'hannahmontana'
            EDITION_LONG: 'Hannah Montana Linux'
          - EDITION_SHORT: 'interstate'
            EDITION_LONG: 'Interstate Swift Linux'
          - EDITION_SHORT: 'taylorswift'
            EDITION_LONG: 'Taylor Swift Linux'
          - EDITION_SHORT: 'twilightzone'
            EDITION_LONG: 'Twilight Zone Swift Linux'

    env:
      EDITION_SHORT_CI: ${{ matrix.EDITION_SHORT }}
      EDITION_LONG_CI: ${{ matrix.EDITION_LONG }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Set parameters
      - name: Set parameters
        run: bash set-params-ci.sh

      # Display parameters
      - name: Display parameters
        run: bin/welcome

      - name: STAGE 0 - Test upload to SourceForge
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        run: bin/test-upload

      - name: STAGE 1A - Provisioning (apt-get update)
        run: sudo bin/provision-apt-get-update

      - name: STAGE 1B - Provisioning (apt-get upgrade, main branch only)
        run: sudo bin/provision-apt-get-upgrade
        if: ${{ github.ref == 'refs/heads/main' }}

      - name: STAGE 1C - Provisioning (apt-get install)
        run: sudo bin/provision-apt-get-install

      # Cache key needs to be updated to clear cache
      - name: STAGE 2 - Cache downloaded ISO file
        id: cache-downloaded-iso
        uses: actions/cache@v3
        with:
          path: iso-downloaded
          key: key-iso-file-2022-09-14

      - name: STAGE 2 - Downloading the Linux ISO
        run: bin/download-iso

      - name: STAGE 3 - Mounting the virtual Linux DVD
        run: sudo bin/mount-iso

      - name: STAGE 4 - Copying the content from the virtual Linux DVD
        run: sudo bin/copy-iso

      - name: STAGE 5 - Mounting the compressed FS file
        run: sudo bin/mount-compressed-fs

      - name: STAGE 6 - Copying the squashfs files
        run: sudo bin/copy-squashfs

      - name: STAGE 7A - Mounting directories needed for chroot
        run: sudo bin/chroot-mounts

      - name: STAGE 7B - Updating the chroot environment
        run: sudo bin/chroot-update

      - name: STAGE 7C - Upgrading the chroot environment (main branch only)
        run: sudo bin/chroot-upgrade
        # if: ${{ github.ref == 'refs/heads/main' }}

      - name: STAGE 7D - Installing KeePassXC in chroot (main branch only)
        run: sudo bin/chroot-keepassxc
        if: ${{ github.ref == 'refs/heads/main' }}

      - name: STAGE 7E - Ending the chroot mounts
        run: sudo bin/chroot-unmount

      - name: STAGE 7F - Post-chroot cleanup operations
        run: sudo bin/chroot-cleanup

      - name: STAGE 8A - Editing the files of the new ISO component files
        run: sudo bin/edit-iso
